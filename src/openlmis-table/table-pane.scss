/*
Table Panes

A table pine is a fitted way to display a large table, that will implement
virtual scrolling so that extremely large lists and pages can be rendered.

<section ng-controller="OpenlmisExampleTableData as vm" style="display:flex; flex-direction: column; height: 400px;">
  <form class="form-inline" ng-submit="vm.update(rows, cols)">
    <label for="rowsToAdd">Rows</label>
    <input id="rowsToAdd" type="number" ng-model="rows" ng-value="vm.rows.length" />
    <label for="cols">Cols</label>
    <input id="cols" type="number" ng-model="cols" ng-value="vm.columns.length" />
    <input class="add" type="submit" value="Reset" />
  </form>
  <div class="openlmis-table-pane">
    <table>
      <thead>
        <tr>
          <th>Sample</th>
          <th>Data</th>
          <th ng-repeat="column in vm.columns track by $index">Column {{$index + 1}}</th>
          <th>Total</th>
        </tr>
      </thead>
      <tbody>
        <tr ng-repeat="row in vm.rows">
          <td>Sample</td>
          <td>Data</td>
          <td ng-repeat="column in ::vm.columns track by $index">
            <input requied positive-integer ng-model="row[column]" />
          </td>
          <td>MEH</td>
        </tr>
      </tbody>
      <tfoot>
        <tr>
          <td>Foot 1</td>
          <td>Foot 2</td>
          <td ng-repeat="column in vm.columns track by $index">
          <td></td>
        </tr>
      </tfoot>
    </table>
  </div>
</section>

Styleguide 4.6
*/

.openlmis-table-pane {
  display: flex;
  flex-direction: column;

  position: relative;
  overflow: hidden;

  flex-grow: 1;

  .md-virtual-repeat-container {
    flex-grow: 1;
    // thead, tfoot {
    //   visibility: hidden;
    // }
  }

  table {
    @extend .openlmis-table;
  }

  td, th {
    &[openlmis-table-sticky-cell] {
      position: relative;
      top: 0px;
      left: 0px;
      z-index: 10;
      transform: translate3d(0px, 0px, 0px);
    }
  }

  table.fixed {
    position: absolute;
    z-index: 10;

    &.thead {
      top: 0px;
    }

    &.tfoot {
      bottom: 0px;
    }
  }

  &.ps,
  &.ps.ps--in-scrolling {
    > table.tfoot {
      bottom: $space-size/2;
    }

    .ps__scrollbar-y-rail,
    .ps__scrollbar-y-rail:hover,
    .ps__scrollbar-x-rail,
    .ps__scrollbar-x-rail:hover {
      background-color: $border-color;
      opacity: 1;
      z-index: 11;
    }

    .ps__scrollbar-x-rail,
    .ps__scrollbar-x-rail:hover {
      background-color: $border-color;
      opacity: 1;
      z-index: 11;
      height: $space-size/2;
      .ps__scrollbar-x {
        height: $space-size/2;
      }
    }

  }

}

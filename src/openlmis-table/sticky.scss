/*
Sticky Columns

Tables can have sticky columns to keep important elements within view.

  <div class="openlmis-table-container" ng-init="rows=[1,2,3,4,5,6,7,8,9,10];groups=[1,2];columns=[1,2,3];">
    <div class="button-group primary">
      <button ng-show="groups.length == 2" ng-click="columns=[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15];groups=[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20];">Make Table Huge</button>
      <button ng-show="groups.length != 2" ng-click="columns=[1,2,3];groups=[1,2]">Make Table Shorter</button>
    </div>
    <table>
      <thead>
        <tr>
          <th class="col-sticky">Checkbox</th>
          <th class="col-sticky">Code</th>
          <th ng-repeat="column in columns">Column {{column}}</th>
          <th class="col-sticky sticky-right">Actions</th>
        </tr>
      </thead>
      <tbody ng-repeat="group in groups" tbody-title="Group {{group}}">
        <tr ng-repeat="row in rows">
          <td ><input type="checkbox" /></td>
          <td>1f3c89b213e44a729ef2228302cc5a25</td>
          <td ng-repeat="column in columns">{{column}}-abcdefghijklmnopqrstuvwxyz</td>
          <td ><button>Action</button>
        </tr>
      </tbody>
    </table>
  </div>


Styleguide 4.4
*/



td,
th,
tr.title > td > div  {
	&.sticky{ }
	&.stuck{
    position: relative;
  	z-index: 10;
  }
  &.stuck:after{
    content: " ";
    display: block;
    position: absolute;
    top: 0px;
    z-index: -1;
    width: $space-size/4;
    height: 100%;
    background: transparent;

  }
  &.stuck-left:after {
    right: $space-size/4 * -1;
    background-image: linear-gradient(to right, $light-gray, transparent);
  }
  &.stuck-right:after {
    left: $space-size/4 * -1;
    background-image: linear-gradient(to left, $light-gray, transparent);
  }
  &.stuck-top {
	z-index: 12;
  }
  &.stuck-top.stuck-left,
  &.stuck-top.stuck-right {
	z-index: 13;
  }
}

/*
Tables

Tables in the OpenLMIS-UI should be used to edit data across multiple items and
those item's specific attributes. If there isn't a need to edit multiple items,
use a list to style and display the items.

*Tables must include:*
* `thead` that defines the column titles
* `tbody` which will hold groups of items
* Have an equal number of cells in each row
* One cell in each row must be a title cell [(scope attributes are automatically added)](../../docs/#/api/openlmis.table:tableHeaderCell)
*NOTE:* If a column is number of any type, right align the column.

*Tables do not:*
* Include a title for the table, this should be styles as a page heading or
sub-heading
* Have an 'on click' action for the entire row, links or buttons may be placed
in specifc cell
* *Don't use tables for styling purposes.*

*Types of Table Rows*
There are 4 types of table rows that are supported in the OpenLMIS-UI. When designing
a table, please use these row types.
* _Normal_ is a row that is primary to the task being done
* _Child_ is additional sub categories of the "parent" normal row
* _Secondary_ is a row that is related to a subset of normal rows, as isn't directly editable
* _Title_ rows group large numbers of rows, and only consist of a title that doesn't correspond to any table column

<table class="openlmis-table" >
  <thead>
    <tr>
      <th>Name</th>
      <th>Value</th>
      <th>Another Value</th>
      <th>Total</th>
    </tr>
  </thead>
  <tbody tbody-title="Example Title Row">
    <tr>
      <td>Example Normal Row</td>
      <td><input type="number" ng-model="value1a" /></td>
      <td><input type="number" ng-model="value1b" /></td>
      <td class="is-numeric">{{value1a + value1b}}</td>
    </tr>
    <tr class="is-secondary">
        <td>Example Secondary Row</td>
        <td class="is-numeric">{{value3a + value4a + value2a}}</td>
        <td class="is-numeric">{{value3b + value4b + value2b}}</td>
        <td class="is-numeric">{{value3a + value3b + value4a + value4b + value2a + value2b}}</td>
    </tr>
    <tr>
      <td>Another Normal Row</td>
      <td><input type="number" ng-model="value2a" /></td>
      <td><input type="number" ng-model="value2b" /></td>
      <td class="is-numeric">{{value2a + value2b}}</td>
    </tr>
    <tr>
      <td>Normal row with children</td>
      <td class="is-numeric">{{value3a + value4a}}</td>
      <td class="is-numeric">{{value3b + value4b}}</td>
      <td class="is-numeric">{{value3a + value3b + value4a + value4b}}</td>
    </tr>
    <tr class="is-child">
      <td>Child Row</td>
      <td><input type="number" ng-model="value3a" /></td>
      <td><input type="number" ng-model="value3b" /></td>
      <td class="is-numeric">{{value3a + value3b}}</td>
    </tr>
    <tr class="is-child">
      <td>Second child row</td>
      <td><input type="number" ng-model="value4a" /></td>
      <td><input type="number" ng-model="value4b" /></td>
      <td class="is-numeric">{{value4a + value4b}}</td>
    </tr>

  </tbody>
</table>

Styleguide 4.0
*/


$table-border-color: $border-color !default;
$table-border-width: 1px !default;
$table-cell-padding: $space-size/2 !default;
$table-cell-child-padding: $table-cell-padding/2 !default;

$table-row-background-color: $background-color !default;
$table-row-background-color-secondary: $background-color-alt !default;
$table-row-background-color-error: $background-color-danger !default;
$table-row-background-color-focus: $background-color-focus !default;

$table-header-color: $white !default;
$table-header-background-color: $background-color-dark !default;

// Border logic
.openlmis-table {
    border: $table-border-color $table-border-width solid;
    border-collapse: separate;

    td, th {
        border-top: $table-border-color $table-border-width solid;
        @include border-left($table-border-color $table-border-width solid);
        @include text-align(left);

        &:first-child {
            @include border-left(0px);
        }
    }

    tr:first-child > td {
        border-top-width: 0px;
    }
}

.openlmis-table td,
.openlmis-table th {
    position: relative;
    vertical-align: middle;
    padding: $table-cell-padding;

    .collapsable {
        width: $sidebar-width;
        white-space: normal;
    }

    button {
      display: inline-block;
    }

    &.is-numeric {
      @include text-align(right);
    }
}

@mixin table-row($bg, $bg-highlight) {
    > * {
        background: $bg;
    }

    &:hover > *,
    &.is-highlighted > * {
        background: $bg-highlight;
    }
}

.openlmis-table tr {
    @include table-row(
        $table-row-background-color,
        $table-row-background-color-focus
    );
}

.openlmis-table tr.is-secondary,
.openlmis-table tr.is-disabled {
    @include table-row(
        $table-row-background-color-secondary,
        $table-row-background-color-secondary
    );
}

.openlmis-table tr.is-child {
    > td {
        padding: $table-cell-child-padding $table-cell-padding;
        border-top-width: 0px;
    }
}

.openlmis-table thead > tr,
.openlmis-table tfoot > tr {
    @include table-row(
        $table-header-background-color,
        $table-header-background-color
    );

    color: $table-header-color;
    a {
        color: $table-header-color;
    }
}

.openlmis-table thead > tr:last-child > *{
    background-image: linear-gradient(
        to bottom,
        $table-header-background-color,
        darken($table-header-background-color, 15%)
    );
}
